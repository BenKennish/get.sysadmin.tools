---
- hosts: all
  remote_user: root

  vars:
      # **TODO**: allow these vars to be set from command line (first to bash, then forward to ansible)
      root_email: "ben@kennish.net"
      timezone: "Europe/London"
      ntpCountry: "uk"  #used for NTP config
      sudoUser: "ben"
      sudoTimeout: 30  # sudo timeout in minutes (set to -1 to disable timeout)
      userConfigFiles: 
         - .bashrc
         - .vimrc
      gitConfigName: "Ben Kennish"
      gitConfigEmail: "ben@kennish.net"
      validateSSLCert: yes 

  tasks:
  #- name: yum update everything
  #  yum: name=* state=latest

  - name: OpenSSH - disable password auth
    lineinfile:
      dest: /etc/ssh/sshd_config
      backup: yes
      line: "PasswordAuthentication no"
      regexp: "^PasswordAuthentication "
      insertafter: "^#PasswordAuthentication "
    notify: restart sshd

#   **TODO** set root password to a random string and display it to STDOUT

  - name: OpenSSH - disable GSSAPI auth
    lineinfile:
      dest: /etc/ssh/sshd_config
      backup: yes
      line: "GSSAPIAuthentication no"
      regexp: "^GSSAPIAuthentication "
      insertafter: "^#GSSAPIAuthentication "
    notify: restart sshd

  - name: OpenSSH - disable challenge response auth
    lineinfile:
      dest: /etc/ssh/sshd_config
      backup: yes
      line: "ChallengeResponseAuthentication no"
      regexp: "^ChallengeResponseAuthentication "
      insertafter: "^#ChallengeResponseAuthentication "
    notify: restart sshd

  - name: YUM - install epel-release
    yum: pkg=epel-release state=installed

  - name: YUM - install useful RPMs
    yum: pkg={{ item }} state=installed
    with_items:
       - bash-completion

  - name: install useful RPMs using yum
    yum: pkg="{{ item }}" state=installed
    with_items:
       - bind-utils
       - curl
       - dos2unix
       - git
       - iotop
       - jwhois
       - lsof
       - lynx
       - mailx
       - man
       - nmap
       - ntp
       - ntpdate
       - rsync
       - tcpdump
       - telnet
       - traceroute
       - unix2dos
       - unzip
       - vim-enhanced
       - wget
       - yum-cron
       - zip

  - name: setup root email alias to {{ root_email }}
    lineinfile:
        dest: /etc/aliases
        backup: yes
        line: "root:          {{ root_email }}"
        regexp: "^root:"
        insertafter: "^#root:"
    notify: update aliases database

  - name: yum-cron - start and enable
    service: name=yum-cron state=started enabled=yes

  - name: timezone config - /etc/sysconfig/clock
    lineinfile:
      dest: /etc/sysconfig/clock
      backup: yes
      line: 'ZONE="{{ timezone }}"'

  - name: timezone config - /etc/localtime symlink
    file: src=../usr/share/zoneinfo/{{ timezone }} dest=/etc/localtime state=link force=yes

  - name: ntpd - config for {{ ntpCountry }}.pool.ntp.org
    lineinfile:
      dest: /etc/ntp.conf
      backup: yes
      line: "server {{ item }}.{{ ntpCountry }}.pool.ntp.org iburst"
      regexp: "^server {{ item }}.{{ ntpCountry }}.pool.ntp.org "
      insertafter: "^server "
    with_items:
      - "0"
      - "1"
      - "2"
      - "3"

  - name: ntpd - start and enable
    service: name=ntpd state=started enabled=yes

  - name: ".config files - in /etc/skel"
    get_url: url="https://get.sysadmin.tools/userConfigFiles/{{ item }}" dest="/etc/skel/{{ item }}" owner=root group=root mode=0644 validate_certs="{{ validateSSLCert }}"
    with_items: userConfigFiles
  # newly created users will have files in /etc/skel copied to their newly created home dirs

  - name: ".config files - in /root"
    get_url: url="https://get.sysadmin.tools/userConfigFiles/{{ item }}" dest="/root/{{ item }}" owner=root group=root mode=0644 validate_certs="{{ validateSSLCert }}"
    with_items: userConfigFiles

  # **TODO**: iptables config

  - name: vim - create /root/.vim/
    file: name="/root/{{ item }}" state=directory mode=0700
    with_items:
        - ".vim/swap"
        - ".vim/backup"

  - name: vim - create /etc/skel/.vim/
    file: name="/etc/skel/{{ item }}" state=directory mode=0700
    with_items:
        - ".vim/swap"
        - ".vim/backup"

  - name: create user '{{ sudoUser }}' and add them to 'wheel' group
    user: name={{ sudoUser }} append=yes groups=wheel

  - name: allow wheel group to use sudo
    lineinfile:
        dest: /etc/sudoers
        regexp: "^%wheel"
        line: "%wheel  ALL=(ALL)       ALL"
        validate: 'visudo -cf %s'

  # default sudo timeout is 5 mins
  - name: set sudo timeout to {{ sudoTimeout }} mins
    lineinfile:
        dest: /etc/sudoers
        line: "Defaults    timestamp_timeout={{ sudoTimeout }}"
        regexp: "^Defaults +timestamp_timeout=[0-9]+ *$"
        insertafter: "Defaults +env_reset"
        validate: 'visudo -cf %s'

  - name: template over .gitconfig
    template: src="templates/.gitconfig.j2" dest="~{{ sudoUser }}/.gitconfig" owner="{{ sudoUser }}" group="{{ sudoUser }}"

  handlers:
    - name: update aliases database
      command: newaliases

    - name: restart sshd
      service: name=sshd state=restarted
